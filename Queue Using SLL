#include  <stdio.h>
#include  <stdlib.h>

struct queue{
    int data;
    struct queue *next;
};

struct queue *front=NULL;
struct queue *rear=NULL;

void insert(int x)
{
    struct queue *newnode=(struct queue *)malloc(sizeof(struct queue));
    newnode->data=x;
    newnode->next=NULL;
    
    if(front==NULL && rear==NULL)
    {
        front=rear=newnode;
    }
    else
    {
        rear->next=newnode;
        rear=newnode;
    }
}

void delete()
{
    struct queue *temp=front;
    if(front==NULL && rear==NULL)
    {
        printf("Queue is empty\n");
    }
    else
    {
        printf("Element deleted is %d\n",front->data);
        front=front->next;
        free(temp);
    }
}

void peek()
{
    if(front==NULL && rear==NULL)
    {
        printf("Queue is empty\n");
    }
    else
    {
        printf("Front element is %d\n",front->data);
    }
}

void display()
{
    struct queue *temp=front;
    if(front==NULL && rear==NULL)
    {
        printf("Queue is empty\n");
    }
    else
    {
        while(temp != NULL)
        {
            printf("%d ",temp->data);
            temp=temp->next;
        }
    }
}


int main()
{
  int oper,a;
    
    while(1)
    {
         printf("\nEnter the operation you want to perform\n");
         printf("1. Insert\n");
         printf("2. Delete\n");
         printf("3. Peek\n");
         printf("4. Display\n");
         printf("0. Exit");
         scanf("%d",&oper);
         switch(oper)
         {
             case 1:
                 printf("Enter the element to be inserted\n");
                 scanf("%d",&a);
                 printf("%d has been inserted\n",a);
                 insert(a);
                 break;
                 
             case 2:
                 delete();
                 break;
                 
             case 3:
                 peek();
                 break;
                 
             case 4:
                 display();
                 break;
                 
             case 0:
                 exit(1);
                 break;
                 
             default:
                 printf("Enter correct operator\n");
         }
    }
       
  return 0;
}
