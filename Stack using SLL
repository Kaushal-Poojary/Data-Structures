#include  <stdio.h>
#include  <stdlib.h>

struct stack{
    int data;
    struct stack *next;
};

struct stack *top=NULL;

void push(int x)
{
    struct stack *newnode=(struct stack *)malloc(sizeof(struct stack));
    newnode->data=x;
    newnode->next=top;
    top=newnode;    
}

void pop()
{
    struct stack *temp=(struct stack *)malloc(sizeof(struct stack));
    temp=top;
    if(top==NULL)
    {
        printf("Stack is empty\n");
    }
    else
    {
        printf("Popped element is %d\n",top->data);
        top=top->next;
        free(temp);
    }
}

void peek()
{
    if(top==NULL)
    {
        printf("Stack is empty\n");
    }
    else
        printf("Top element is %d\n",top->data);    
}

void display()
{
    struct stack *temp=(struct stack *)malloc(sizeof(struct stack));
    temp=top;
    if(top==NULL)
    {
        printf("Stack is empty\n");
    }
    else
    {
        while(temp != NULL)
        {
            printf("%d ",temp->data);
            temp=temp->next;
        }
    }
}

int main()
{
  int oper,a;
    
    while(1)
    {
    printf("\nEnter the operation you want to perform\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Peek\n");
    printf("4. Display\n");
    printf("0. Exit\n");
    scanf("%d",&oper);
    
    switch(oper)
    {
        case 1:
            printf("Enter the element to be pushed\n");
            scanf("%d",&a);
            printf("%d has been pushed to the stack\n",a);
            push(a);
            break;
            
        case 2:
            pop();
            break;
            
        case 3:
            peek();
            break;
            
        case 4:
            display();
            break;
            
        case 0:
            exit(1);
            break;
            
        default:
            printf("Enter valid operator\n");
    }
    }
  return 0;
}
